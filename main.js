(()=>{"use strict";var n={163:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(15),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"\n.title {\n  text-align: center;\n  margin: 30px auto;\n}\n\n.d-none {\n  display: none;\n}\n\n.popOverlay {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.stopScroll {\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.popContainer {\n  overflow-y: auto;\n  position: fixed;\n  display: flex;\n  flex-flow: column;\n  height: 90%;\n  width: 50%;\n  margin: 20px 25%;\n  padding: 40px 40px;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 2;\n  background-image: linear-gradient(to bottom right, #212529, #447a8f);\n  box-shadow: 4px 4px 20px rgb(207, 199, 199);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n}\n\n.close-pop {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 2rem;\n  margin: 10px;\n}\n\nimg#poster {\n  width: 50%;\n  align-self: flex-start;\n  border: 3px solid #5abded;\n}\n\n.info {\n  display: flex;\n}\n\n.details {\n  width: 50%;\n  margin: 0 0 0 20px;\n}\n\n.comments-list {\n  padding-left: 0;\n  list-style: none;\n  background-color: #185770;\n  border-radius: 10px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  -ms-border-radius: 10px;\n  -o-border-radius: 10px;\n}\n\n.comment-container {\n  display: flex;\n  justify-content: space-between;\n  max-height: 100px;\n  padding: 10px;\n}\n\n#noCommentMessage {\n  background-color: #91643b;\n  border-radius: 10px;\n  padding: 10px;\n}\n\n.comment-container > * {\n  flex: 1;\n}\n\n.comment-description {\n  overflow-y: auto;\n  flex: 3;\n}\n\n.add-comment form {\n  display: flex;\n  flex-flow: column;\n  margin-bottom: 10px;\n  padding: 10px 50px;\n}\n\n.add-comment form > * {\n  margin: 10px 0 5px 0;\n}\n\n.add-comment form input,\n.add-comment form textarea {\n  width: 70%;\n  background-color: #185770;\n  border: 1px solid white;\n  color: #ffd809;\n  font-style: oblique;\n}\n\n.add-comment form #submit {\n  width: 40%;\n  border: none;\n  padding: 5px;\n  margin: 10px 0 5px 0;\n  box-shadow: 2px 2px 5px rgb(63, 59, 59);\n  border-radius: 2px;\n  background-color: #5abded;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  -ms-border-radius: 2px;\n  -o-border-radius: 2px;\n}\n\n.add-comment form #submit:active {\n  background-color: #ffd809;\n}\n\n.add-comment form #submit:hover {\n  transform: translateY(1px);\n  -webkit-transform: translateY(1px);\n  -moz-transform: translateY(1px);\n  -ms-transform: translateY(1px);\n  -o-transform: translateY(1px);\n}\n\n@media only screen and (max-width: 1000px) {\n  .popContainer {\n    width: 80%;\n    margin: 20px 10%;\n    padding: 40px 40px;\n  }\n}\n\n@media only screen and (max-width: 1500px) {\n  .popContainer {\n    width: 60%;\n    margin: 20px 20%;\n    padding: 40px 40px;\n  }\n}\n\n@media only screen and (max-width: 700px) {\n  .popContainer {\n    width: 90%;\n    margin: 20px 5%;\n    padding: 40px 10px;\n  }\n\n  .add-comment form {\n    margin-bottom: 10px;\n    padding: 10px;\n  }\n}\n\n@media only screen and (max-width: 800px) {\n  .info {\n    display: flex;\n    flex-flow: column;\n  }\n\n  img#poster,\n  .details {\n    width: 90%;\n  }\n}\n","",{version:3,sources:["webpack://./src/CSS/popup.css"],names:[],mappings:";AACA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,UAAU;EACV,MAAM;EACN,SAAS;EACT,QAAQ;EACR,OAAO;EACP,oCAAoC;AACtC;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,aAAa;EACb,iBAAiB;EACjB,WAAW;EACX,UAAU;EACV,gBAAgB;EAChB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,SAAS;EACT,UAAU;EACV,oEAAoE;EACpE,2CAA2C;EAC3C,kBAAkB;EAClB,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,eAAe;EACf,YAAY;AACd;;AAEA;EACE,UAAU;EACV,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,yBAAyB;EACzB,mBAAmB;EACnB,2BAA2B;EAC3B,wBAAwB;EACxB,uBAAuB;EACvB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,gBAAgB;EAChB,OAAO;AACT;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;;EAEE,UAAU;EACV,yBAAyB;EACzB,uBAAuB;EACvB,cAAc;EACd,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,YAAY;EACZ,oBAAoB;EACpB,uCAAuC;EACvC,kBAAkB;EAClB,yBAAyB;EACzB,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EACtB,qBAAqB;AACvB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,0BAA0B;EAC1B,kCAAkC;EAClC,+BAA+B;EAC/B,8BAA8B;EAC9B,6BAA6B;AAC/B;;AAEA;EACE;IACE,UAAU;IACV,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,UAAU;IACV,gBAAgB;IAChB,kBAAkB;EACpB;AACF;;AAEA;EACE;IACE,UAAU;IACV,eAAe;IACf,kBAAkB;EACpB;;EAEA;IACE,mBAAmB;IACnB,aAAa;EACf;AACF;;AAEA;EACE;IACE,aAAa;IACb,iBAAiB;EACnB;;EAEA;;IAEE,UAAU;EACZ;AACF",sourcesContent:["\n.title {\n  text-align: center;\n  margin: 30px auto;\n}\n\n.d-none {\n  display: none;\n}\n\n.popOverlay {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.stopScroll {\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.popContainer {\n  overflow-y: auto;\n  position: fixed;\n  display: flex;\n  flex-flow: column;\n  height: 90%;\n  width: 50%;\n  margin: 20px 25%;\n  padding: 40px 40px;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 2;\n  background-image: linear-gradient(to bottom right, #212529, #447a8f);\n  box-shadow: 4px 4px 20px rgb(207, 199, 199);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n}\n\n.close-pop {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 2rem;\n  margin: 10px;\n}\n\nimg#poster {\n  width: 50%;\n  align-self: flex-start;\n  border: 3px solid #5abded;\n}\n\n.info {\n  display: flex;\n}\n\n.details {\n  width: 50%;\n  margin: 0 0 0 20px;\n}\n\n.comments-list {\n  padding-left: 0;\n  list-style: none;\n  background-color: #185770;\n  border-radius: 10px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n  -ms-border-radius: 10px;\n  -o-border-radius: 10px;\n}\n\n.comment-container {\n  display: flex;\n  justify-content: space-between;\n  max-height: 100px;\n  padding: 10px;\n}\n\n#noCommentMessage {\n  background-color: #91643b;\n  border-radius: 10px;\n  padding: 10px;\n}\n\n.comment-container > * {\n  flex: 1;\n}\n\n.comment-description {\n  overflow-y: auto;\n  flex: 3;\n}\n\n.add-comment form {\n  display: flex;\n  flex-flow: column;\n  margin-bottom: 10px;\n  padding: 10px 50px;\n}\n\n.add-comment form > * {\n  margin: 10px 0 5px 0;\n}\n\n.add-comment form input,\n.add-comment form textarea {\n  width: 70%;\n  background-color: #185770;\n  border: 1px solid white;\n  color: #ffd809;\n  font-style: oblique;\n}\n\n.add-comment form #submit {\n  width: 40%;\n  border: none;\n  padding: 5px;\n  margin: 10px 0 5px 0;\n  box-shadow: 2px 2px 5px rgb(63, 59, 59);\n  border-radius: 2px;\n  background-color: #5abded;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  -ms-border-radius: 2px;\n  -o-border-radius: 2px;\n}\n\n.add-comment form #submit:active {\n  background-color: #ffd809;\n}\n\n.add-comment form #submit:hover {\n  transform: translateY(1px);\n  -webkit-transform: translateY(1px);\n  -moz-transform: translateY(1px);\n  -ms-transform: translateY(1px);\n  -o-transform: translateY(1px);\n}\n\n@media only screen and (max-width: 1000px) {\n  .popContainer {\n    width: 80%;\n    margin: 20px 10%;\n    padding: 40px 40px;\n  }\n}\n\n@media only screen and (max-width: 1500px) {\n  .popContainer {\n    width: 60%;\n    margin: 20px 20%;\n    padding: 40px 40px;\n  }\n}\n\n@media only screen and (max-width: 700px) {\n  .popContainer {\n    width: 90%;\n    margin: 20px 5%;\n    padding: 40px 10px;\n  }\n\n  .add-comment form {\n    margin-bottom: 10px;\n    padding: 10px;\n  }\n}\n\n@media only screen and (max-width: 800px) {\n  .info {\n    display: flex;\n    flex-flow: column;\n  }\n\n  img#poster,\n  .details {\n    width: 90%;\n  }\n}\n"],sourceRoot:""}]);const s=i},147:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(15),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"body {\n  background-color: black;\n}\n\n.list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 20px;\n}\n\n.card-img-top,\n.card-title,\n.fa-comment-dots,\n.fa-heart {\n  cursor: pointer;\n}\n\n.fa-comment-dots,\n.fa-heart {\n  font-size: 20px;\n}\n","",{version:3,sources:["webpack://./src/CSS/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,eAAe;EACf,YAAY;AACd;;AAEA;;;;EAIE,eAAe;AACjB;;AAEA;;EAEE,eAAe;AACjB",sourcesContent:["body {\n  background-color: black;\n}\n\n.list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 20px;\n}\n\n.card-img-top,\n.card-title,\n.fa-comment-dots,\n.fa-heart {\n  cursor: pointer;\n}\n\n.fa-comment-dots,\n.fa-heart {\n  font-size: 20px;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(o)for(var r=0;r<this.length;r++){var i=this[r][0];null!=i&&(a[i]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&a[d[0]]||(t&&(d[2]?d[2]="".concat(t," and ").concat(d[2]):d[2]=t),e.push(d))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,a=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,a,r=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(r.push(o.value),!e||r.length!==e);i=!0);}catch(n){s=!0,a=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw a}}return r}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=a[1],i=a[3];if(!i)return r;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),A="/*# ".concat(d," */"),c=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[r].concat(c).concat([A]).join("\n")}return[r].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],s=0;s<n.length;s++){var d=n[s],A=o.base?d[0]+o.base:d[0],c=r[A]||0,l="".concat(A," ").concat(c);r[A]=c+1;var m=t(l),p={css:d[1],media:d[2],sourceMap:d[3]};-1!==m?(e[m].references++,e[m].updater(p)):e.push({identifier:l,updater:a(p,o),references:1}),i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=t(r[i]);e[s].references--}for(var d=o(n,a),A=0;A<r.length;A++){var c=t(r[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o=t.css,a=t.media,r=t.sourceMap;a?n.setAttribute("media",a):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),i=t.n(r),s=t(565),d=t.n(s),A=t(216),c=t.n(A),l=t(589),m=t.n(l),p=t(147),u={};u.styleTagTransform=m(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=c(),e()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;var f=t(163),E={};E.styleTagTransform=m(),E.setAttributes=d(),E.insert=i().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=c(),e()(f.Z,E),f.Z&&f.Z.locals&&f.Z.locals;const x=(n,e)=>{const t=document.getElementById(e),o=document.createElement("div");o.id=`list-${e}`,o.classList.add("list"),n!==[]&&n.forEach((n=>{const{image:e,id:t,title:a}=n,r=`<div id="${t}" class="card m-2 bg-dark text-light" style="width: 12rem;">\n    <img id ="img${t}" src="${e}" class="card-img-top" alt="${a}">\n    <div class="card-body d-flex flex-column align-items-start">\n    <div>\n    <div class=''>\n    <i id ="like${t}" class="far fa-heart text-danger my-2"></i> <span id= 'likeCounter${t}' class="likes"></span>\n    <i id ="comment${t}" class="fas fa-comment-dots mx-2"></i>\n    </div>\n    </div>\n      <h5 id ="title${t}" class="card-title">${a}</h5>\n    </div>\n    </div>`;o.insertAdjacentHTML("beforeend",r)})),t.appendChild(o)},C=n=>{const e=document.querySelector(".comments-list"),t=document.getElementById("noCommentMessage");0===n.length?(e.innerHTML="",t.classList.remove("d-none")):(t.classList.add("d-none"),e.innerHTML="",n.forEach((n=>{const t=`<li class='comment-container'>\n      <p class='comment-time'>${n.creation_date}</p>\n      <p class='comment-name'>${n.username}</p>\n      <p class='comment-description'>${n.comment}</p>\n      </li>\n      `;e.innerHTML+=t})))},g=n=>{document.querySelector("#comments-counter-popup").innerText=n},h=(n,e)=>{document.getElementById(`${e}-movies-counter`).innerText=n},B=()=>{const n=document.getElementById("submitError");document.getElementById("name").value="",document.getElementById("comment-description").value="",n.classList.add("d-none")},b=n=>{const e=document.getElementById(`like${n}`);e.classList.remove("far"),e.classList.add("fas")},v=n=>n.length,y=n=>n.length;class w{constructor(n){this.baseUrl="https://api.themoviedb.org/3/movie/",this.apiKey="3e6e2ef61d4b19645d93d55c93096241",this.type=n,this.data=[]}async getData(){const n=`${this.baseUrl+this.type}?api_key=${this.apiKey}`;await fetch(n).then((n=>n.json())).then((n=>{this.filterData(n.results)}))}filterData=n=>{n.forEach((n=>{this.data.push({title:n.title,image:`https://image.tmdb.org/t/p/w500${n.poster_path}`,id:n.id,overview:n.overview,release_date:n.release_date,vote_average:n.vote_average})}))};movieInfo=n=>{let e=null;return this.data.forEach((t=>{t.id===parseInt(n,10)&&(e=t)})),e}}const k=new w("upcoming"),I=new w("popular"),S=new w("top_rated"),L=new class{constructor(){this.url="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/oCr8tT2XFGQpncz4Ebxe",this.popupComments=[],this.likes=[]}async addComment(n,e,t){const o=`${this.url}/comments`;await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n,username:e,comment:t})})}async getComments(n){const e=`${this.url}/comments?item_id=${n}`;this.popupComments=[],await fetch(e).then((n=>n.json())).then((n=>{void 0===n.error&&(this.popupComments=n)}))}async addLike(n){const e=`${this.url}/likes`;await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n})})}async getLikes(){const n=`${this.url}/likes`;this.likes=[],await fetch(n).then((n=>n.json())).then((n=>{void 0===n.error&&(this.likes=n)}))}},T=new class{constructor(n){this.data=[],this.itemName=n,this.getItems()}getItems(){const n=JSON.parse(localStorage.getItem(this.itemName));null!==n&&(this.data=n)}setItems(){localStorage.setItem(this.itemName,JSON.stringify(this.data))}pushItem(n){this.data.push(n),this.setItems()}containItem(n){return-1!==this.data.indexOf(n)}}("userLikes");document.addEventListener("DOMContentLoaded",(()=>{document.body.innerHTML+='<div class="popOverlay d-none"></div>\n    <div class="popContainer d-none text-light">\n        <i class="fas fa-times close-pop"></i>\n        <div class=\'info\'>\n          <img id=\'poster\' src="#" alt="poster">\n          <div class="details">\n            <h2 class="title"></h2>\n            <p class="release_date">Release Date : <span id="date"></span> </p>\n            <p class="vote_average">Voting Average : <span id="vote"></span></p>\n            <div class="overview">\n              <h4>Overview : </h4>\n              <p id="overview-txt"></p>\n            </div>\n          </div>  \n        </div>\n        <div class="comments">\n            <h2 class="comments-title title">Comments (<span id="comments-counter-popup"></span>)</h2>\n            <div id=\'noCommentMessage\'>\n                    <p>No comments yet 😢 </p>\n                    <p>Add you comment below ⤵️</p>\n            </div>\n            <ul class=\'comments-list\'>\n                \n            </ul>\n        </div>\n        <input id=\'idHiddenInput\' class=\'d-none\'>\n        <div class="add-comment">\n            <h2 class="add-comment title">Add a Comment</h2>\n            <form action="#">\n                <label for="name">Name:</label>\n                <input id="name" type="text" placeholder="Rachid Ahmad" required>\n                <label for="comment-description">Comment:</label>\n                <textarea name="comment" id="comment-description" cols="30" rows="6" placeholder="it is amazing !" required></textarea>\n                <button id="submit" type="submit">Comment</button>\n                <p id=\'submitError\'  class=\'text-danger\'>Values are Required</p>\n            </form>\n        </div>\n    </div>';const n=document.getElementById("submit"),e=document.getElementById("name"),t=document.getElementById("comment-description"),o=document.querySelector(".close-pop"),a=document.querySelector(".popOverlay"),r=document.querySelector(".popContainer"),i=document.getElementById("submitError");let s=null;const d=n=>{document.getElementById(`list-${n}`).addEventListener("click",(e=>{let t=null,o=!1;e.target.classList.contains("card-img-top")&&(t=e.target.id.replace("img",""),o=!0),e.target.classList.contains("card-title")&&(t=e.target.id.replace("title",""),o=!0),e.target.classList.contains("fa-comment-dots")&&(t=e.target.id.replace("comment",""),o=!0),e.target.classList.contains("fa-heart")&&(t=e.target.id.replace("like",""),T.containItem(t)||L.addLike(t).then((()=>{(n=>{const e=`likeCounter${n}`,t=document.getElementById(e),o=t.innerHTML;t.innerHTML=""===o?1:parseInt(o,10)+1})(t),b(t),T.pushItem(t)}))),o&&(B(),((n,e)=>{let t=null;switch(e){case"upcoming":t=k.movieInfo(n);break;case"popular":t=I.movieInfo(n);break;case"top_rated":t=S.movieInfo(n);break;default:t=null}(n=>{const e=document.querySelector(".popOverlay"),t=document.querySelector(".popContainer");e.classList.remove("d-none"),t.classList.remove("d-none");const o=document.querySelector(".title"),a=document.querySelector("#poster"),r=document.querySelector("#date"),i=document.querySelector("#vote"),s=document.querySelector("#overview-txt");o.innerText=n.title,a.src=n.image,r.innerText=n.release_date,i.innerText=n.vote_average,s.innerText=n.overview})(t),L.getComments(n).then((()=>{C(L.popupComments),g(v(L.popupComments))})),document.getElementById("idHiddenInput").value=n})(t,n))}))};k.getData().then((()=>{x(k.data,"upcoming"),d("upcoming"),s=y(k.data),h(s,"upcoming")})),I.getData().then((()=>{x(I.data,"popular"),d("popular"),s=y(I.data),h(s,"popular")})),S.getData().then((()=>{x(S.data,"top_rated"),d("top_rated"),s=y(S.data),h(s,"top_rated")})),L.getLikes().then((()=>{L.likes.forEach((n=>{const e=`likeCounter${n.item_id}`,t=document.getElementById(e),o=n.likes;null!==t&&(t.innerHTML=o)})),null!==T.data&&T.data.forEach((n=>{b(n)}))})),n.addEventListener("click",(n=>{n.preventDefault();const o=document.getElementById("idHiddenInput").value;""===e.value||""===t.value?i.classList.remove("d-none"):(L.addComment(o,e.value,t.value).then((()=>{L.getComments(o).then((()=>{C(L.popupComments),g(v(L.popupComments))}))})),B())})),o.addEventListener("click",(()=>{r.classList.add("d-none"),a.classList.add("d-none")})),a.addEventListener("click",(()=>{r.classList.add("d-none"),a.classList.add("d-none")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,